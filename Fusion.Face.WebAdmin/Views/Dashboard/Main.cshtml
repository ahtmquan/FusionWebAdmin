@model Fusion.Face.WebAdmin.Models.MainDashboardModel
@{
    ViewBag.Title = "Main Dashboard";
}

<div class="breadcrumbs">
    <div class="col-sm-4">
        <div class="page-header float-left">
            <div class="page-title">
                <h1>@ViewBag.Title</h1>
            </div>
        </div>
    </div>
    <div class="col-sm-8">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right">
                    <li class="active">Dashboard</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<div class="content mt-3">
    <div class="col-xl-3 col-lg-6">
        <div class="card">
            <div class="card-body">
                <div class="stat-widget-one">
                    <div class="stat-icon dib"><i class="ti-user text-primary border-primary"></i></div>
                    <div class="stat-content dib">
                        <div class="stat-text">Total Active Users</div>
                        <div class="stat-digit"><div id="lblTotalUsers"></div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6">
        <div class="card">
            <div class="card-body">
                <div class="stat-widget-one">
                    <div class="stat-icon dib"><i class="ti-user text-warning border-warning"></i></div>
                    <div class="stat-content dib">
                        <div class="stat-text">Total Registered People</div>
                        <div class="stat-digit"><div id="lblTotalPeople"></div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6">
        <div class="card">
            <div class="card-body">
                <div class="stat-widget-one">
                    <div class="stat-icon dib"><i class="ti-layout-grid2 text-primary border-primary"></i></div>
                    <div class="stat-content dib">
                        <div class="stat-text">Total Activities</div>
                        <div class="stat-digit"><div id="lblTotalActivities"></div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6">
        <div class="card">
            <div class="card-body">
                <div class="stat-widget-one">
                    <div class="stat-icon dib"><i class="ti-alarm-clock text-warning border-warning"></i></div>
                    <div class="stat-content dib">
                        <div class="stat-text">Last Login</div>
                        <div class="stat-digit"><div id="lblLastLogin"></div></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <h4 class="mb-3">Graph</h4>
            <canvas id="mainChart"></canvas>
        </div>
    </div>
</div>


@section SubScript{
    <script src="~/assets/js/lib/chart-js/Chart.bundle.js"></script>
    <script type="text/javascript">

        var myChart = null;
        var ctx = document.getElementById("mainChart");
        ctx.height = 50;

        $(document).ready(function () {
            $.ajax({
                url: '@Url.Content("~")Dashboard/DashboardSummary',
                dataType: "json",
                //method: "POST",
                //data: { searchInfo },
                success: function (data) {
                    //alert(JSON.stringify(data));
                    $('#lblTotalUsers').html(data.TotalUsers);
                    $('#lblTotalPeople').html(data.TotalPeople);
                    $('#lblTotalActivities').html(data.TotalActivities);
                    $('#lblLastLogin').html(data.LastLoginString);
                }
            });


            $.ajax({
                url: '@Url.Content("~")Dashboard/TransactionSummary',
                dataType: "json",
                method: "POST",
                //data: { searchInfo},
                success: function (data) {

                    var list = data.data;

                    var chartData = {};
                    chartData.labels = [];
                    chartData.datasets = [[],[]];

                    $.each(list, function (i, item) {

                        if (i % 2 == 0) {
                            chartData.labels.push(item.RecordedDateString);
                        }

                        if (item.TranxType == 'REGISTER') {
                            chartData.datasets[0].push(item.Total);
                        } else {
                            chartData.datasets[1].push(item.Total);
                        }
                    });
                    RefreshChart(chartData);
                }
            });
        });

        function UpdateChart(chart, chartData) {

            chart.data.labels.length = 0;
            chart.data.datasets.forEach((dataset) => {
                dataset.data.length = 0;
            });

            $.each(chartData.labels, function (i, item) {
                chart.data.labels.push(item);
                chart.data.datasets[0].data.push(chartData.datasets[0].data[i]);
                chart.data.datasets[1].data.push(chartData.datasets[1].data[i]);
            });

            chart.update();
        }


        function RefreshChart(newData) {

            var chartData = {
                labels: ["2010", "2011", "2012", "2013", "2014", "2015", "2016"],
                type: 'line',
                defaultFontFamily: 'Montserrat',
                datasets: [{
                    label: "New Registration",
                    data: [0, 30, 10, 120, 50, 63, 10],
                    backgroundColor: 'transparent',
                    borderColor: 'rgba(220,53,69,0.75)',
                    borderWidth: 3,
                    pointStyle: 'circle',
                    pointRadius: 5,
                    pointBorderColor: 'transparent',
                    pointBackgroundColor: 'rgba(220,53,69,0.75)',
                },
                {
                    label: "Prediction",
                    data: [0, 30, 10, 120, 50, 63, 10],
                    backgroundColor: 'transparent',
                    borderColor: 'rgba(40,167,69,0.75)  ',
                    borderWidth: 3,
                    pointStyle: 'circle',
                    pointRadius: 5,
                    pointBorderColor: 'transparent',
                    pointBackgroundColor: 'rgba(40,167,69,0.75)',
                }]
            };

            chartData.labels = newData.labels;
            chartData.datasets[0].data = newData.datasets[0];
            chartData.datasets[1].data = newData.datasets[1];

            if (myChart != null) {
                UpdateChart(myChart, chartData);
            } else {

                myChart = new Chart(ctx, {
                    type: 'line',
                    data: chartData,
                    options: {
                        responsive: true,

                        tooltips: {
                            mode: 'index',
                            titleFontSize: 12,
                            titleFontColor: '#000',
                            bodyFontColor: '#000',
                            backgroundColor: '#fff',
                            titleFontFamily: 'Montserrat',
                            bodyFontFamily: 'Montserrat',
                            cornerRadius: 3,
                            intersect: false,
                        },
                        legend: {
                            display: false,
                            labels: {
                                usePointStyle: true,
                                fontFamily: 'Montserrat',
                            },
                        },
                        scales: {
                            xAxes: [{
                                display: true,
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                scaleLabel: {
                                    display: false,
                                    labelString: 'Month'
                                }
                            }],
                            yAxes: [{
                                display: true,
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Value'
                                }
                            }]
                        },
                        title: {
                            display: false,
                            text: 'Normal Legend'
                        }
                    }
                });
            }
        }
    </script>
}